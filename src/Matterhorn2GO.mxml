<?xml version="1.0" encoding="utf-8"?>
<!-- 
The Matterhorn2Go Project
Copyright (C) 2011  University of OsnabrÃ¼ck; Part of the Opencast Matterhorn Project

This project is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 
USA 
-->
<s:TabbedViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
								  xmlns:s="library://ns.adobe.com/flex/spark" 
								  applicationComplete="onApplicationComplete(event)"
								  applicationDPI="160" 
								  backgroundColor="#861B1D"
								  splashScreenImage="views.DynamicSplashScreen"
								  persistNavigatorState="true">
	
	<fx:Style source="views/skins/menustyle/css/global.css"/>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";     
		
		s|Application {
			backgroundColor: #861B1D;
		}
		
		s|TabbedViewNavigator { 
			skinClass: ClassReference("views.skins.view.TabbedViewNavigatorSkin"); 
		}
		
		s|ActionBar {
			chromeColor:#861B1D;
			defaultButtonAppearance: default;
			skinClass: ClassReference("views.skins.actionbar.CustomActionBarSkin");
		}
		
	</fx:Style>	
	
	<fx:Script> 
		<![CDATA[ 
			import business.datahandler.SeriesDataHandler;
			import business.datahandler.EpisodesDataHandler;
			
			import events.ChangeTabViewEvent;
			
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			protected function onApplicationComplete (event:FlexEvent):void
			{ 
				var e:EpisodesDataHandler = EpisodesDataHandler.getInstance();
				e.init();
				
				var s:SeriesDataHandler = SeriesDataHandler.getInstance();
				s.init();
			
				tabbedNavigator.addEventListener(ChangeTabViewEvent.CHANGETAB, onChange); 
			} 
			
			protected function onChange(event:ChangeTabViewEvent):void 
			{ 
				this.tabbedNavigator.selectedIndex = 1;
			} 
			
		]]> </fx:Script> 
	
	<s:navigators>
		<s:ViewNavigator id="vn1" 
						 backgroundColor="#F2F2F2"
						 label="Series" 
						 width="100%" 
						 height="100%" 
						 firstView="views.SeriesView"/> 
	
		<s:ViewNavigator label="Episodes"
						 backgroundColor="#F2F2F2"
						 width="100%" 
						 height="100%" 
						 firstView="views.EpisodeView"/> 
	</s:navigators>

</s:TabbedViewNavigatorApplication>